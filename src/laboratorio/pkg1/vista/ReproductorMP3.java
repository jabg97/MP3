/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package laboratorio.pkg1.vista;

import java.io.File;
import java.io.FileInputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javazoom.jl.player.Player;
import laboratorio.pkg1.modelo.ListaDoble;
import laboratorio.pkg1.modelo.Nodo;

/**
 *
 * @author Casa
 */
public class ReproductorMP3 extends javax.swing.JFrame {

    private ListaDoble listaMusica1;
    private ListaDoble listaMusica2;
    private Nodo actual;
    private MP3 mp3;

    /**
     * Creates new form ReproductorMP3
     */
    public ReproductorMP3() {
        initComponents();
        this.listaMusica1 = new ListaDoble();
        this.listaMusica2 = new ListaDoble();
        this.actual = null;
        this.mp3 = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jButton3 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reproductor MP3");

        jButton1.setText("Test Consola");
        jButton1.setToolTipText("Pruebas en consola");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista Principal"));

        jTextPane1.setEditable(false);
        jScrollPane1.setViewportView(jTextPane1);

        jButton5.setText(">>");
        jButton5.setToolTipText("Siguiente Canción");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton8.setText("<<");
        jButton8.setToolTipText("Canción Anterior");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton6.setText("+");
        jButton6.setToolTipText("Añadir Canción");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("|> / ||");
        jButton7.setToolTipText("Reproducir / Pausar Canción");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton2.setText("x");
        jButton2.setToolTipText("Eliminar Canción");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista Secundaria"));

        jButton4.setText("Unir Listas");
        jButton4.setToolTipText("Concatenar listas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton9.setText("x");
        jButton9.setToolTipText("Eliminar Canción");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextPane2.setEditable(false);
        jScrollPane2.setViewportView(jTextPane2);

        jButton3.setText("+");
        jButton3.setToolTipText("Añadir Canción");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(45, 45, 45)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addComponent(jButton9)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton9))
                .addContainerGap())
        );

        jButton10.setText("Buscar");
        jButton10.setToolTipText("Concatenar listas");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton10))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ListaDoble lista1 = new ListaDoble();
        ListaDoble lista2 = new ListaDoble();
        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println(lista1.contar() + " Elementos");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        lista1.insertar("1");
        try {
            System.out.println("Hay (" + lista1.contar() + ") Elementos.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println((lista1.existe("36")) ? "Si existe." : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println("Hay (" + lista1.contar() + ") Elementos.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println((lista1.existe("1")) ? "Si existe." : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        lista1.insertar("2");
        lista1.insertar("3");
        lista1.insertar("4");
        lista1.insertar("5");

        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println("[ " + lista1.elementosReversa() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println("Hay (" + lista1.contar() + ") Elementos.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println((lista1.existe("36")) ? "Si existe." : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println((lista1.existe("3")) ? "Si existe." : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            Nodo nodo = lista1.buscar(66);
            System.out.println((nodo.getValor() != null) ? nodo.getValor() : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            Nodo nodo = lista1.buscar(2);
            System.out.println((nodo.getValor() != null) ? nodo.getValor() : " No existe.");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar("45");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar("4");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar(4);
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar(2);
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar(2);
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.eliminar("1");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        lista1.insertar("4321");
        lista1.insertar("1234");

        lista2.insertar("asd2");
        lista2.insertar("asd");
        lista2.insertar("asd3");
        try {
            lista2.reemplazar("505", 1);
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }

        try {
            lista1.concatenar(lista2);
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        try {
            System.out.println("[ " + lista1.elementos() + " ]");
        } catch (Exception ex) {
            System.out.println("Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        buscar(true, listaMusica1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String nombre = null;
        JFileChooser buscador = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                "Archivos MP3", "mp3");
        buscador.setFileFilter(filtro);
        int resultado = buscador.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File fichero = buscador.getSelectedFile();
            nombre = fichero.getAbsolutePath();
            this.listaMusica2.insertar(nombre);
            actulizarL2();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            listaMusica1.concatenar(listaMusica2);
            if (this.actual == null) {
                try {
                    this.actual = listaMusica1.buscar(1);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
                }
            }
            JOptionPane.showMessageDialog(this, "Las listas fueron unidas.", "Exito", JOptionPane.INFORMATION_MESSAGE);
            actulizarL1();
            actulizarL2();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        siguiente();

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String nombre = null;
        JFileChooser buscador = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(
                "Archivos MP3", "mp3");
        buscador.setFileFilter(filtro);
        int resultado = buscador.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File fichero = buscador.getSelectedFile();
            nombre = fichero.getAbsolutePath();
            this.listaMusica1.insertar(nombre);
            if (this.actual == null) {
                try {
                    this.actual = listaMusica1.buscar(1);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
                }
            }
            actulizarL1();
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        reproducir(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        anterior();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        buscar(true, listaMusica2);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        buscar(false, listaMusica1);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void anterior() {
        if (this.actual != null && this.actual != listaMusica1.getCabeza()) {
            this.actual = this.actual.getAnterior();
            actulizarL1();
            reproducir(true);
        }
    }

    private void siguiente() {
        if (this.actual != null && listaMusica1.getCantidad() > 1 && this.actual != listaMusica1.getCola()) {
            this.actual = this.actual.getSiguiente();
            actulizarL1();
            reproducir(true);
        }
    }

    private void actulizarL1() {
        try {
            Nodo[] data = this.listaMusica1.arreglo();
            String texto = "";
            for (int i = 0; i < data.length; i++) {
                texto += ((data[i].equals(actual)) ? "=>" : "") + "(" + (i + 1) + ") \"" + data[i].getValor() + "\"\n";
            }
            jTextPane1.setText(texto);
        } catch (Exception ex) {
            jTextPane1.setText("");
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void actulizarL2() {
        try {
            Nodo[] data = this.listaMusica2.arreglo();
            String texto = "";
            for (int i = 0; i < data.length; i++) {
                texto += "(" + (i + 1) + ") \"" + data[i].getValor() + "\"\n";
            }
            jTextPane2.setText(texto);

        } catch (Exception ex) {
            jTextPane2.setText("");
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void buscar(boolean eliminar, ListaDoble lista) {
        try {
            Nodo nodo = new Nodo();
            String[] opciones = {"Id", "Nombre"};
            String opcion = (String) JOptionPane.showInputDialog(this, (eliminar) ? "Eliminar " : "Buscar " + "por...",
                    (eliminar) ? "Eliminar" : "Buscar", JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
            if (opcion.equals("Id")) {
                int id = Integer.parseInt(JOptionPane.showInputDialog(this, "Ingrese el ID",
                        "Buscar", JOptionPane.QUESTION_MESSAGE));
                nodo = lista.buscar(id);
            } else {
                String nombre = JOptionPane.showInputDialog(this, "Ingrese el Nombre",
                        "Buscar", JOptionPane.QUESTION_MESSAGE);
                if(!nombre.equals("")){
                    nodo = lista.buscar_sub_cadena(nombre);
                }else{
                     JOptionPane.showMessageDialog(this, "Escriba un nombre", "Alerta", JOptionPane.WARNING_MESSAGE);
                }
                
            }
            if (nodo.getValor() != null) {
                if (lista == this.listaMusica1) {
                    if (eliminar) {
                        lista.extraer(nodo);
                        if (this.actual == nodo) {
                            if (listaMusica1.getCantidad() == 1) {
                                this.actual = listaMusica1.getCabeza();
                                reproducir(true);
                            } else if (this.actual.getSiguiente() != null) {
                                siguiente();
                            } else if (this.actual.getAnterior() != null) {
                                anterior();
                            } else {
                                reproducir(false);
                                this.actual = null;
                            }
                            
                        }
                    } else {
                        this.actual = nodo;
                        reproducir(true);
                    }
                    actulizarL1();
                } else {
                    lista.extraer(nodo);
                    actulizarL2();
                }
            } else {
                JOptionPane.showMessageDialog(this, "No existe la canción.", "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception ex) {
            if (lista == this.listaMusica1) {
                actulizarL1();
            } else {
                actulizarL2();
            }
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void reproducir(boolean cambio) {
        if (this.actual != null) {
            if (this.mp3 == null) {
                this.mp3 = new MP3();
                this.mp3.start();
            } else {
                this.mp3.stop();
                this.mp3 = null;
                if (cambio) {
                    this.mp3 = new MP3();
                    this.mp3.start();
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "No hay canción seleccionada.", "Alerta", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReproductorMP3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReproductorMP3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReproductorMP3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReproductorMP3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReproductorMP3().setVisible(true);
            }
        });
    }

    private class MP3 extends Thread {

        @Override
        public void run() {

            try (FileInputStream fis = new FileInputStream(actual.getValor())) {
                Player player = new Player(fis);
                player.play();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Alerta", JOptionPane.WARNING_MESSAGE);
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    // End of variables declaration//GEN-END:variables
}
